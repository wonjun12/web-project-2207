[다형성]
    - 하나의 메소드나 클래스가 있을때 다양한 방법으로 동작하는 것을 의미한다.
    - 

[클래스와 다형성]
    class A {}
    class B extends A {}
    public class Poly {
        public static void main(String[] args){
            A obj = new B();
        }
    }   // 클래스 B의 값을 가지고 클래스 A의 행새를 하는 obj 인스턴스가 생성이된다.,
    /* 어려울수는 있으나 클래스B 안에서 독단적으로 있는 메소드는 사용이 불가능하다.
        왜냐하면 클래스B를 인스턴스했지만 결국 데이터타입은 클래스A로 사용되기 때문이다.
        -> 독단적인 메소드를 사용할시 클래스A에 대한 메소드만 사용이 가능하며,
            중복된 메소드(오버라이딩된 메소드)는 값을 준 클래스B의 메소드를 실행하게 된다.
    */

    class A {
        public String x() {return "A.x";}
        public String z() {return "A.z";}
    }
    class B extends A {
        public String x() {return "B.x";}
        public String y() {return "B.y";}
    }
    public class Poly {
        public static void main(String[] args){
            A obj = new B();
            obj.x(); //<< 중복된 메소드(오버라이딩)된 x() 메소드 이기때문에 B.x가 출력이 된다.
            obj.y(); //<< 결국 클래스A의 타입이 된거기 때문에 오류가 뜬다.
            obj.z(); //<< 값을 받아온건 클래스B이지만 타입은 클래스A이기 때문에 z()가 실행이 된다.
        }
    } 


[인터페이스와 다형성]