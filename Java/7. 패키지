[패키지] : 클래스를 체계적으로 관리하기 위해 패키지(package)를 사용한다.
= 식별자 역할
    - 물리적인 형태가 "파일 시스템의 폴더" (폴더 경로와 비슷하다.)
    - 전체 이름은 "패키지명+클래스명"이지만 패키지가 상-하위로 구분되어 있다면 도트(.)를 사용해서 표현한다.
        ex) 상위패키지.하위패키지.클래스

[패키지 선언] : 클래스를 컴파일 하는 과정에서 자동적으로 생성되는 폴더
    [규칙]
        1) 숫자로 시작해서는 안되고, _, $를 제외한 특수 문자를 사용해서는 안된다.
        2) java로 시작하는 패키지는 자바 표준 API에서만 사용하므로 사용해서는 안 된다.
        3) 모두 소문자로 작성하는 것이 관례이다.

[import 호출]
    1) 
    class {
        패키지.패키지.클래스 tire = new 패키지.패키지.클래스();
    }
        -> 패키지 이름이 길거나, 사용해야할 클래스 수가 많다면 패키지 이름을 붙인다는 것은 전체코드를 남잡해 보이게 할 수 있다.
            (비추)
            
    2)
    import 패키지.패키지.클래스;
        [또는, import 패키지.패키지.*;]

        - 선언위치는 "패키지 선언과 클래스 선언 사이다."
        - *는 패키지에 속하는 모든 클래스들을 의미한다.
        - import문의 개수는 제한이 없고 필요한 패키지가 있다면 얼마든지 추가할 수 있다.

    import com.mycom.*;
    import com.mycom.project;
        = 서로 다른 의미다.
    --> 서로 다른 클래스 이름이 존재하고, 두 패키지가 모두 "import되어 있을경우 첫번째 방법을 사용"한다.