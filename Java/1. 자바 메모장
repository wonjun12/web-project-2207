상수(constant)
c++에서는 const 사용하지만 Java에서는 final을 사용한다.
 ex) final int Num = 0;

 instanceof 연산자
 해당 객체가 어떤 클래스나 인터페이스로부터 생성되었는지를 판별해주는 역할


 [메모리 구조]
 낮은 주소   --------------
 low memory |   메모리    |
            --------------
            |   클래스    | 
            | 클래스 변수  | 메소드 영역
            | ---------   |
            |   객체      |
            |  인스턴스   | 힙 영역
            |            |     ↓
            | ---------  |     ↓
            |            |     ↑
            |  메소드     |     ↑
            |  지역변수   |  스택 영역
높은 주소    |  매개변수   |
high memory --------------

메소드(method) 영역
- 클래스 변수(static variable)가 저장되는 영역
    특정 클래스가 사용되면 해당 클래스의 클래스 파일(*.class)를 읽어들여, 해당 클래스에 대한 정보를 메소드 영역에 저장합니다

힙(heap) 영역
- 모든 인스턴스 변수가 저장되는 영역
    new 키워드를 사용하여 인스턴스가 생성되며, 해당 정보를 힙 영역에 저장합니다.
    -> 메모리의 낮은 주소에서 높은 주소의 방향으로 할당됩니다.

스택(stack) 영역
- 메소드가 호출될 때 메소드의 스택 프레임이 저장되는 영역입니다.
    메소드가 호출되면, 메소드의 호출과 관계되는 지역변수와 매개변수를 스택영역에 저장합니다.
    -> 메소드의 호출과 함께 할당되며, 메소드의 호출이 완료되면 소멸합니다.
        -> 스택 영역에 저장되는 메소드의 호출 정보를 '스택 프레임(stack frame)'이라고 한다.

- 푸시(push) 동작으로 데이터를 저장하고, 팝(pop) 동작으로 데이터를 인출합니다.
    -> 후입선출(LIFO, Last-in First-out) 방식에 기본으로 하여 가장 늦게 저장된 데이터가 가장 먼저 인출된다.
    -> 메모리의 높은 주소에서 낮은 주소의 방향으로 할당된다.
