[추상(abstract) 클래스]
    - 상속을 강제하는 규제
    - 메소드에 추상화를 지정하여 사용할경우 부모 클래스(상위 클래스)에는 실행할 값(메소드 실행할 함수들..)이 없어야 한다.
    - 상속 받은 자식 클래스에서 추상(abstract)화 된 메소드의 같은 이름의 메소드를 생성하여 안에서 실행한다.
        - 오버라이딩과 비슷 하다고 보면된다.
    - 사용하는것은 같은 코딩의 중복화를 줄여주며, 기본적으로 사용해야하는 고정적 메소드는 부모 클래스에 담당하게 하고,
        능동적으로 메소드안의 함수를 수정해서 해야 할 경우 추장화(abstract)를 받은 자식 클래스에서 작성 하게 된다.


   abstract class Class_Name {
        public abstract int b(); //메소드 안의 값이 존재 하면 안된다.
        //추상 클래스 내에는 추상 메소드가 아닌 메소드가 존재 할 수 있다.
        public void d() {
            System.out.println();
        }
   }
   
   class Class extends Class_Name {
        public int b() {
           return 1; //이런식으로 상속 받아서 자식 클래스에서 값을 수정해서 사용한다.
        }
   }
